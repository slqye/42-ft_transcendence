name: transcendence

services:
  django_frontend:
    container_name: transcendence_django_frontend
    image: django_frontend
    build:
      context: services/django_frontend
      labels:
        is-transcendance: "yes"
    env_file: .env
    volumes:
      - ./services/django_frontend/.:/app
    networks:
      - transcendence_network_backend
    expose:
      - 8080
    restart: on-failure
    labels:
      is-transcendance: "yes"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5

  django_api:
    container_name: transcendence_django_api
    image: django_api
    build:
      context: services/django_api
      labels:
        is-transcendance: "yes"
    env_file: .env
    volumes:
      - ./services/django_api/.:/app
      - transcendence_database_migrations:/migrations
    networks:
      - transcendence_network_backend
    expose:
      - 8081
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      is-transcendance: "yes"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    container_name: transcendence_postgres
    image: postgres
    build:
      context: services/postgres
      labels:
        is-transcendance: "yes"
    env_file: .env
    volumes:
      - transcendence_database_data:/var/lib/postgresql/data
    networks:
      - transcendence_network_backend
    restart: always
    expose:
      - 5432
    labels:
      is-transcendance: "yes"
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  nginx:
    container_name: transcendence_nginx
    image: nginx
    build:
      context: services/nginx
      labels:
        is-transcendance: "yes"
    networks:
      - transcendence_network_backend
    ports:
      - 8000:443
    depends_on:
      django_api:
        condition: service_healthy
      django_frontend:
        condition: service_healthy
    labels:
      is-transcendance: "yes"

volumes:
  transcendence_database_data:
    name: transcendence_database_data
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/database_data
      o: bind
    labels:
      is-transcendance: "yes"
  transcendence_database_migrations:
    name: transcendence_database_migrations
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/database_migrations
      o: bind
    labels:
      is-transcendance: "yes"

networks:
  transcendence_network_backend:
    name: transcendence_network_backend
    driver: bridge
    labels:
      is-transcendance: "yes"