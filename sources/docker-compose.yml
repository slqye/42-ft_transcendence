name: transcendence

services:
  django_frontend:
    container_name: transcendence_django_frontend
    image: django_frontend
    build:
      context: services/django_frontend
      labels:
        is-transcendence: "yes"
    env_file: .env
    volumes:
      - ./services/django_frontend/:/app
      - transcendence_file_uploads:/app/frontend/assets/user_media
    networks:
      - transcendence_network_backend
    expose:
      - 8080
    restart: on-failure
    labels:
      is-transcendence: "yes"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5

  django_api:
    container_name: transcendence_django_api
    image: django_api
    build:
      context: services/django_api
      labels:
        is-transcendence: "yes"
    env_file: .env
    volumes:
      - ./services/django_api/:/app
      - transcendence_file_uploads:/app/user_media
    networks:
      - transcendence_network_backend
    expose:
      - "8081"
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      is-transcendence: "yes"
    command: >
      gunicorn --bind 0.0.0.0:8081 --workers 3 website.wsgi:application
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    container_name: transcendence_postgres
    image: postgres
    build:
      context: services/postgres
      labels:
        is-transcendence: "yes"
    env_file: .env
    volumes:
      - transcendence_database_data:/var/lib/postgresql/data
    networks:
      - transcendence_network_backend
    restart: always
    expose:
      - 5432
    labels:
      is-transcendence: "yes"
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  postgres_exporter:
    container_name: transcendence_postgres_exporter
    image: wrouesnel/postgres_exporter:v0.8.0
    environment:
      DATA_SOURCE_NAME: postgres://user:password@postgres:5432/db_name?sslmode=disable
    restart: always
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - transcendence_network_backend

  nginx:
    container_name: transcendence_nginx
    image: nginx
    build:
      context: services/nginx
      labels:
        is-transcendence: "yes"
    networks:
      - transcendence_network_backend
    restart: always
    ports:
      - 8000:443
    depends_on:
      django_api:
        condition: service_healthy
      django_frontend:
        condition: service_healthy
    labels:
      is-transcendence: "yes"

  nginx_exporter:
    container_name: transcendence_nginx_exporter
    image: nginx/nginx-prometheus-exporter:1.4
    networks:
      - transcendence_network_backend
    restart: always
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://localhost:8000/metrics
    depends_on:
      - nginx

  prometheus:
    container_name: transcendence_prometheus
    image: prometheus
    networks:
      - transcendence_network_backend
    build:
      context: services/prometheus
      labels:
        is-transcendence: "yes"
    restart: always
    volumes:
      - transcendence_prometheus_data:/prometheus/data_storage/
    command:
      - "--storage.tsdb.path=/prometheus/data_storage/"
    ports:
      - 9090:9090
    labels:
      is-transcendence: "yes"

  grafana:
    container_name: transcendence_grafana
    image: grafana
    build:
      context: services/grafana
      labels:
        is-transcendence: "yes"
    restart: always
    ports:
      - '3000:3000'
    env_file: .env
    networks:
      - transcendence_network_backend
    depends_on:
      - prometheus
    labels:
      is-transcendence: "yes"

volumes:
  transcendence_database_data:
    name: transcendence_database_data
    driver: local
    labels:
      is-transcendence: "yes"
  transcendence_prometheus_data:
    name: transcendence_prometheus_data
    driver: local
    labels:
      is-transcendence: "yes"
  transcendence_file_uploads:
    name: transcendence_file_uploads
    driver: local
    labels:
      is-transcendence: "yes"

networks:
  transcendence_network_backend:
    name: transcendence_network_backend
    driver: bridge
    labels:
      is-transcendence: "yes"