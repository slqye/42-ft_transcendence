services:
  django:
    container_name: transcendence_django
    image: django
    build:
      context: services/django
    env_file: .env
    volumes:
      - ./services/django/.:/app
      - transcendence_database_migrations:/migrations
    networks:
      - transcendence_network_backend
    ports:
      - 8080:8080
    environment:
      - DEBUG=1
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: transcendence_postgres
    image: postgres
    build:
      context: services/postgres
    env_file: .env
    volumes:
      - transcendence_database_data:/var/lib/postgresql/data
    networks:
      - transcendence_network_backend
    restart: always
    expose:
      - 5050
    ports:
      - 5050:5050
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  transcendence_database_data:
    name: transcendence_database_data
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/database_data
      o: bind
  transcendence_database_migrations:
    name: transcendence_database_migrations
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/database_migrations
      o: bind

networks:
  transcendence_network_backend:
    name: transcendence_network_backend
    driver: bridge